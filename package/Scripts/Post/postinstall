#!/bin/sh
#
# $1: the full path to the installation package; for example:
# /Volumes/Projects/Testing/Simple_Carbon_App.pkg
#
# $2: the full path to the installation destination; for example:
# /Applications
#
# $3: the mountpoint of the destination volume; for example:
# / or /Volumes/External_Drive
# 
# $4: the root directory for the current System folder:
# /

echo "preinstall: Path to installer....... $1"
echo "preinstall: Path to destination..... $2"
echo "preinstall: Path to dest volume..... $3"
echo "preinstall: Root of system folder... $4"

#set -x # Useful for echoing everything the script does to the installer log!!

if [ ! -e "$3" ]
then
    echo "$3 volume does not exist!"
    exit 1
fi

# clean up what would otherwise turn into "//" paths
if [ "$3" == "/" ]
then
    dest_vol=""
else
    dest_vol="$3"
fi    

chamTemp="usr/local/chamTemp" #blackosx added

# Extra folder now resides in /$chamTemp.
# Copy /$chamTemp/Extra to correct location.
if [ ! -f "$dest_vol"/.ChameleonEFI ]; then
	echo "Copying $dest_vol/$chamTemp/Extra/* $dest_vol/Extra"
	if [ ! -f "$dest_vol"/Extra ]; then
		mkdir "$dest_vol"/Extra
	fi
	cp -R "$dest_vol"/$chamTemp/Extra/* "$dest_vol"/Extra
else
	echo "Copying $dest_vol/$chamTemp/Extra/* $/Volumes/EFI/Extra"
	if [ ! -f "/Volumes/EFI/Extra" ]; then
		mkdir "/Volumes/EFI/Extra"
	fi
	cp -R "$dest_vol"/$chamTemp/Extra/* /Volumes/EFI/Extra

	# unmount /Volumes/EFI
   	attempts=1
    	while [ "$( df | grep EFI )" ] && [ "${attempts}" -lt 5 ]; do
	    	echo "Unmounting $( df | grep EFI | awk '{print $1}' )"
	   	 umount -f $( df | grep EFI | awk '{print $1}' )
	   	 attempts=$(( ${attempts} + 1 ))
   	 done

   	# Remove /.ChameleonEFI file
   	echo "Removing /.ChameleonEFI file"
    	rm "$dest_vol"/.ChameleonEFI
fi

# Remove /.ChameleonLogFlag file
if [ -f "$dest_vol"/.ChameleonLogFlag ]; then
    echo "Removing /.ChameleonLogFlag file"
    rm "$dest_vol"/.ChameleonLogFlag
fi

# delete the temporary Chameleon folder
echo "Removing $dest_vol/$chamTemp file"
rm -rf "$dest_vol/$chamTemp"


echo "Done..."