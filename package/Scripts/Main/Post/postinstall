#!/bin/bash
#
# $1: the full path to the installation package; for example:
# /Volumes/Projects/Testing/Simple_Carbon_App.pkg
#
# $2: the full path to the installation destination; for example:
# /Applications
#
# $3: the mountpoint of the destination volume; for example:
# / or /Volumes/External_Drive
# 
# $4: the root directory for the current System folder:
# /

echo "preinstall: Path to installer....... $1"
echo "preinstall: Path to destination..... $2"
echo "preinstall: Path to dest volume..... $3"
echo "preinstall: Root of system folder... $4"

#set -x # Useful for echoing everything the script does to the installer log!!

if [ ! -e "$3" ]
then
    echo "$3 volume does not exist!"
    exit 1
fi

# clean up what would otherwise turn into "//" paths
if [ "$3" == "/" ]
then
    dest_vol=""
else
    dest_vol="$3"
fi    

# set temporary directory
chamTemp="$dest_vol/usr/local/chamTemp" #blackosx added

# Check for temporary directory/Extra folder.
if [ ! -d "$chamTemp"/Extra ]; then
	mkdir "$chamTemp"/Extra
fi

# ---------------------------------------------
# Get location of this script so we know where
# to find the Install Log script.
# ---------------------------------------------
MYLOCATION="${PWD}/${BASH_ARGV[0]}"
export MYLOCATION="${MYLOCATION%/*}"
scriptDir=$MYLOCATION

# ---------------------------------------------
# Build boot options / Kernel Flags.
# NEEDS MORE WORK!!!!!!!!!!!!
# ---------------------------------------------
# All options selected are now dummy files with
# the filename of the option and value residing
# in /usr/local/chamTemp/options/
# for example. Boot Banner=Yes

# Write some information to the Install Log
"$scriptDir"InstallLog.sh "${3}" "Running Post postinstall script"

# Create template for org.chameleon.Boot.plist"
tempOCBP="$chamTemp"/Extra/org.chameleon.Boot.plist
cp "$dest_vol"/Library/Preferences/SystemConfiguration/com.apple.Boot.plist "$tempOCBP"

# Read list of all boot options the user added.
arrayCount=0
find ${chamTemp}/options | while read FILE
do
	options[arrayCount]="${FILE##*/}"
	keyRead="${options[$arrayCount]%=*}"
	value="${options[$arrayCount]#*=}"

	# Check keyRead for 'KF' at beginning to
	# indicate that should be a kernel flag
	if [ ${keyRead:0:2} = "KF" ];then
		kernelflag=${keyRead#*F }=$value

		# write value to org.chameleon.Boot.plist
		# but skip first one as that will be 'options'
		if [ $arrayCount -gt 0 ]; then
			sudo /usr/libexec/plistbuddy -c "Add :Kernel\ Flags string $kernelflag" "$tempOCBP"
			"$scriptDir"InstallLog.sh "${3}" "Add kernel flag: ${kernelflag}"
			returnValue=$?
			if [ ${returnValue}=1 ]; then
				# Delete it for now, but need to append as more kernel flags could be added in future!!
				sudo /usr/libexec/plistbuddy -c "Delete :Kernel\ Flags" "$tempOCBP"
				sudo /usr/libexec/plistbuddy -c "Add :Kernel\ Flags string $kernelflag" "$tempOCBP"
			fi
		fi
	else
		# escape any spaces
		keyToUse=$( echo $keyRead | sed 's/ /\\ /g' )
		# write value to org.chameleon.Boot.plist
		# but skip first one as that will be 'options'
		if [ $arrayCount -gt 0 ]; then
		echo "Add :${keyToUse} string ${value}"
			sudo /usr/libexec/plistbuddy -c "Add :${keyToUse} string ${value}" "$tempOCBP"
			"$scriptDir"InstallLog.sh "${3}" "Add boot option: ${keyToUse}=${value}"
		fi
	fi
	
	(( arrayCount++ ))
done


# ---------------------------------------------
# Copy temp Extra folder to target destination
# ---------------------------------------------
# If an existing /Extra folder is found, then back it up.
# Extra folder now resides in /usr/local/chamTemp/
# Copy /usr/local/chamTemp/Extra to correct location.

if [ ! -f "$dest_vol"/.ChameleonEFI ]; then
	if [ ! -e "$dest_vol"/Extra ]; then
		mkdir "$dest_vol"/Extra
	else
		"$scriptDir"InstallLog.sh "${3}" "Found existing $dest_vol/Extra folder. Renaming it $dest_vol/Extra-OLD-$( date "+%H-%M-%S" )"
		mv "$dest_vol/Extra" "$dest_vol/Extra_OLD-"$( date "+%H-%M-%S" )
	fi
	cp -R "$chamTemp"/Extra "$dest_vol"
else
	if [ ! -e "/Volumes/EFI/Extra" ]; then
		mkdir "/Volumes/EFI/Extra"
	else
		"$scriptDir"InstallLog.sh "${3}" "Found existing /Volumes/EFI/Extra folder. Renaming it Extra-OLD-$( date "+%H-%M-%S" )"
		mv "/Volumes/EFI/Extra" "/Volumes/EFI/Extra_OLD-"$( date "+%H-%M-%S" )
	fi
	cp -R "$chamTemp"/Extra "/Volumes/EFI"

	# unmount /Volumes/EFI
   	attempts=1
    	while [ "$( df | grep EFI )" ] && [ "${attempts}" -lt 5 ]; do
	    	echo "Unmounting $( df | grep EFI | awk '{print $1}' )"
	   	 umount -f $( df | grep EFI | awk '{print $1}' )
	   	 attempts=$(( ${attempts} + 1 ))
   	 done
fi


# ---------------------------------------------
# Cleanup
# ---------------------------------------------
# Remove /.ChameleonEFI file
if [ -f "$dest_vol"/.ChameleonEFI ]; then
   	echo "Removing /.ChameleonEFI file"
    	rm "$dest_vol"/.ChameleonEFI
fi

# Remove /.ChameleonLogFlag file
if [ -f "$dest_vol"/.ChameleonLogFlag ]; then
    echo "Removing /.ChameleonLogFlag file"
    rm "$dest_vol"/.ChameleonLogFlag
fi

# delete the temporary Chameleon folder
echo "Removing $chamTemp file"
#rm -rf "$chamTemp"


echo "Done..."