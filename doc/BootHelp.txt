The boot: prompt waits for you to type advanced startup options.
If you don't type anything, the computer continues starting up normally. It
uses the kernel and configuration files on the startup device, which it also
uses as the root device. 

Advanced startup options use the following syntax:

    [device]<kernel> [arguments]

Example arguments include

 device: rd=<BSD device name>       (e.g. rd=disk0s2)
         rd=*<IODeviceTree path>    (e.g. rd=*/PCI0@0/CHN0@0/@0:1)

 kernel: kernel name                (e.g. "mach_kernel" - must be in "/" )

 flags: -v (verbose)    -s (single user mode),
        -x (safe mode)  -F (ignore boot configuration file)

 "Graphics Mode"="WIDTHxHEIGHTxDEPTH" (e.g. "1024x768x32")

 kernel flags                       (e.g. debug=0x144)
 io=0xffffffff                      (defined in IOKit/IOKitDebug.h)

Example: mach_kernel rd=disk0s1 -v "Graphics Mode"="1920x1200x32"

If the computer won't start up properly, you may be able to start it up 
using safe mode.  Type -x to start up in safe mode, which ignores all 
cached driver files.

Special booter hotkeys:
-----------------------
  F2            Reload screen with the specified "Graphics Mode", if any.
  F5            Rescan optical drive.
  F8            Abort quiet mode, and display the menu.
  F10           Scan and display all BIOS accessible drives.
  alt+f         Ignore caches
  shift+f       Ignore boot configuration file
  alt+s         Single user mode 
  alt+v         Verbose
  alt+x         Safe mode
  alt+l         Legacy mode (not sure why you need this)
  6             64-bit
  3             32-bit

Special booter commands:
------------------------
  ?memory       Display information about the computer's memory.
  ?video        Display VESA video modes supported by the computer's BIOS.
  ?norescan     Leave optical drive rescan mode.

Additional useful command-line options:
---------------------------------------
  config=<file>             Use an alternate Boot.plist file.

Options useful in the com.apple.Boot.plist file:
------------------------------------------------
  Wait=Yes|No             Prompt for a key press before starting the kernel.
  "Quiet Boot"=Yes|No     Use quiet boot mode (no messages or prompt).
  Timeout=8               Number of seconds to pause at the boot: prompt.
  "Instant Menu"=Yes      Force displaying the partition selection menu.
  "Default Partition"     Sets the default boot partition,
    =hd(x,y)|UUID|"Label"    Specified as a disk/partition pair, an UUID, or a 
                             label enclosed in quotes.
  "Hide Partition"        Remove unwanted partition(s) from the boot menu.
    =partition               Specified, possibly multiple times, as hd(x,y), an
     [;partition2 ...]       UUID or label enclosed in quotes.
  "Rename Partition"      Rename partition(s) for the boot menu.
    =partition <alias>       Where partition is hd(x,y), UUID or label enclosed
     [;partition2 <alias2>   in quotes. The alias can optionally be quoted too. 
     ...]
  "Boot Banner"=No        Show boot banner in GUI mode (default: enabled).
  "Legacy Logo"=Yes       Use the legacy grey apple logo (default: disabled).
  GUI=No                  Disable the GUI (default: enabled).
  PCIRootUID=<value>      Use an alternate value for PciRoot (default value 0).
  AutoResolution=Yes      Automatic display resolution detection (default: disabled).
  GraphicsEnabler=Yes     Automatic device-properties generation for gfx cards (default: disabled).
   NVCAP_<ID>=<value>     Use aternate nvcap value.
   display_0=<value>      Inject alternate value of display-cfg into NVDA,Display-A@0
   display_1=<value>      Inject alternate value of display-cfg into NVDA,Display-B@1
  UseAtiROM=Yes           Use an alternate Ati ROM image 
                            (path: /Extra/<vendorid>_<devid>.rom)
  UseNvidiaROM=Yes        Use an alternate Nvidia ROM image 
                            (path:  /Extra/<vendorid>_<devid>.rom)
  VBIOS=Yes               Inject VBIOS to device-properties.
  EthernetBuiltIn=Yes     Add "built-in"=yes to device-properties of ethernet interfaces.
  USBBusFix=Yes           Enable all USB fixes below:
  EHCIacquire=Yes         Enable the EHCI fix (default: disabled).
    EHCIhard=No           Disable Hard BIOS reset (default: enabled).
  UHCIreset=Yes           Enable the UHCI fix (default: disabled).
  USBLegacyOff=Yes        Enable the USB Legacy fix (default: disabled).
  ForceHPET=Yes|No        Force Enable HPET (default: disabled).
  Wake=No                 Disable wake up after hibernation (default: enabled).
  ForceWake=Yes           Force using the sleepimage (default: disabled).
  WakeImage=<file>        Use an alternate sleepimage file. 
                            (default: /private/var/vm/sleepimage).
  UpdateACPI=Yes          Upgrade automatically ACPI V1 tables to ACPI V4 tables.
  Drop<file>=Yes          Skip:[SSDT, HPET, SLIC, SBST, ECDT, ASF! or DMAR]
  oem<file>=Yes           oem:[DSDT, SSDT, HPET, SBST, ECDT, ASF!, DMAR, APIC or MCFG]
  DSDT=<file>             Use an alternate DSDT.aml file
  SSDT=<file>             Use alternative SSDT_X.aml
  HPET=<file>             Use an alternate HPET.aml file
  SBST=<file>             Use an alternate SBST.aml file
  ECDT=<file>             Use an alternate ECDT.aml file
  ASFT=<file>             Use an alternate ASFT.aml file
  DMAR=<file>             Use an alternate DMAR.aml file
  APIC=<file>             Use an alternate APIC.aml file
  MCFG=<file>             Use an alternate MCFG.aml file
  FADT=<file>             Use an alternate FADT.aml file
  SMBIOS=<file>           Use an alternate SMBIOS.plist file
  SMBIOSdefaults=No       Don't use the Default values for SMBIOS overriding.
                          If smbios.plist doesn't exist, factory values are kept.
  "Scan Single Drive"=Yes Omly scan the drive from which the booter got loaded.
                          Fixes rescan-problems (DVD reader in AHCI mode).
  Rescan=Yes              Enable CD-ROM rescan mode.
  "Rescan Prompt"=Yes     Prompt for enabling CD-ROM rescan mode.
  SystemId=<UUID>         Set the system id manually to UUID.
                          SMUUID in smbios config (reserved field) isn't used then.
  SystemType=<n>          Set the system type to n, where n is between 0..6
                          (default: Desktop)
  md0=<file>              Load raw img file into memory for use as XNU's md0
                          ramdisk. /Extra/Postboot.img is used otherwise.
  UseMemDetect=No         Disable Automatic memory detection (default: Yes).
  GeneratePStates=Yes     Automatically generate supported CPU P-States (default: disabled).
  GenerateCStates=Yes     Automatically generate supported CPU C-States (default: disabled).
  EnableC2State=Yes       Add C2 and lower supported states to _CST section (default: disabled).
  EnableC3State=Yes       Add C3 and lower supported states to _CST section (default: disabled).
  EnableC4State=Yes       Add C4 and lower supported states to _CST section (default: disabled).
  EnableC6State=Yes       Add C6 and lower supported states to _CST section (default: disabled).
  PStates=<value>         Maximum number of P-States to generate (default: all); 
                          e.g.: 8 to generate the 8 highest Frequency states only.
  PStart=<value>          The highest Frequency state to start from (default: 0);
                          e.g.: 1 to start from P1.

Overclocking Options: (To use with CAUTION!)
--------------------------------------------
  FixFSB=Yes              Automatically correct erroneous FSB frequency (default: No).
  busratio=<value>        Alter bus ratio - e.g.: 8.5 (default: auto).
  ForceFSB=<value>        Alter FSB frequency - e.g.: 266 (default: auto).
  minVolt=<value>         Under-volt the processor to the specified value (mVolt);
                          e.g.: 1100 for 1.1 V
  maxVolt=<value>         Over-volt the processor to the specified value (mVolt);
                          e.g.: 750 for 0.75 V
  moreVolt=<value>        how much mVolts to add to each step;
                          e.g.: 20 for getting additional 0.02 V for each CPU state
  lessVolt=<value>        how much mVolts to take-out from each step;
                          e.g.: 10 to substract 0.0.1 V from each CPU state
