#	Makefile for modules
ROOT = $(shell pwd)/../../
SRCROOT = ${ROOT}/src
OBJROOT = $(ROOT)/obj/modules
SYMROOT = $(ROOT)/sym/modules
DSTROOT = $(ROOT)/dst/usr/standalone/modules
DOCROOT = $(ROOT)/doc

include ${ROOT}/Make.rules

# The order of building is important.
SUBDIRS = ModuleSystem klibc uClibcxx HelloWorld Disk FileSystem


CFLAGS= -O3 $(MORECPP) -arch i386 -g -static
DEFINES=
CONFIG = hd
LIBSAIODIR = $(SRCROOT)/i386/libsaio
INC = -I$(LIBSAIODIR) 


ifeq (${CONFIG_MODULESYSTEM_MODULE}, y)
all: $(SYMROOT) $(OBJROOT) objroot_dirs $(SYMROOT)/boot_modules.c $(SYMROOT)/boot_modules.h
	@for i in ${SUBDIRS};						  \
	do								  \
		echo ================= make $@ for $$i =================; \
		( ROOT=$(ROOT);						  \
			cd $$i; ${MAKE}					  \
			$@						  \
		) || exit $$?;						  \
	done

	@# Finish up boot_modules.c
	@echo "}" >> $(SYMROOT)/boot_modules.c


else
all: $(SYMROOT) $(OBJROOT) objroot_dirs $(SYMROOT)/boot_modules.c $(SYMROOT)/boot_modules.h
	@# Finish up boot_modules.c
	@echo "}" >> $(SYMROOT)/boot_modules.c

endif

.PHONY: objroot_dirs
.PHONY: $(SYMROOT)/boot_modules.h
.PHONY: $(SYMROOT)/boot_modules.c

objroot_dirs:
	@${MKDIRS} "$(SYMROOT)/modules/"


$(SYMROOT)/boot_modules.c: ${OBJROOT} ${SYMROOT}/modules/ ${OBJROOT} $(addprefix $(OBJROOT)/, ${MODULE_OBJS})
ifeq ($(BUILT_IN),yes)
	@echo "// Autogenerated - do not modify" > $@
	@echo "#include \"../../i386/modules/ModuleSystem/include/modules.h\"" >> $@
	@echo "#include \"boot_modules.h\"" >> $@
	@echo "void start_built_in_modules() {" >> $@
endif

$(SYMROOT)/boot_modules.h: ${OBJROOT} ${SYMROOT}/modules/ ${OBJROOT} $(addprefix $(OBJROOT)/, ${MODULE_OBJS})
ifeq ($(BUILT_IN),yes)
	@echo "// Autogenerated - do not modify" > $@
	@echo "void start_built_in_modules(); " > $@
endif
